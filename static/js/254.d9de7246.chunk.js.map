{"version":3,"file":"static/js/254.d9de7246.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/MovieGalleryItem/MovieGalleryItem.module.css?31fb","components/MovieGalleryItem/MovieGalleryItem.jsx","webpack://react-homework-template/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import PropTypes from 'prop-types';\nimport css from '../Button/Button.module.css';\n\nexport const Button = ({ onLoadMoreButton, children }) => {\n    return <button type=\"submit\" onClick={onLoadMoreButton} className={css.button}>{children}</button>\n}\n\n\n\nButton.propTypes = {\n    children: PropTypes.string,\n    onLoadMoreButton: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieGalleryItem\":\"MovieGalleryItem_movieGalleryItem__DcGLI\",\"movieGalleryItem__image\":\"MovieGalleryItem_movieGalleryItem__image__xyUPd\"};","import { Link, useLocation } from \"react-router-dom\";\nimport foto from '../../images/poster-not-found-main.jpg';\nimport PropTypes from \"prop-types\";\nimport css from './MovieGalleryItem.module.css';\n\nexport const MovieGalleryItem = ({ poster_path, original_title, id }) => {\n    const baseUrl = 'https://image.tmdb.org/t/p/';\n    const fileSize = 'w500';\n    let URI = `${baseUrl}${fileSize}${poster_path}`;\n\n    if (poster_path === null || poster_path === undefined) {\n        URI = foto;\n    }\n\n    const location = useLocation();\n    const currentPage = location.pathname === \"/\" ? \"/movies\" : location.pathname;\n\n    return <li className={css.movieGalleryItem}>\n            <Link to={`${currentPage}/${id}`} state={{from: location}}>\n                <img src={URI} alt={original_title} className={css.movieGalleryItem__image}/>\n            </Link>\n        </li>\n}\n\n\nMovieGalleryItem.propTypes = {\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieGallery\":\"MovieGallery_movieGallery__M2pL-\"};","import PropTypes from 'prop-types';\nimport { MovieGalleryItem } from '../MovieGalleryItem/MovieGalleryItem';\nimport css from './MovieGallery.module.css';\n\nexport const MovieGallery = ({ movies }) => {\n    return <ul className={css.movieGallery}>\n                {movies.length > 0 && movies.map(movie => (\n                    <MovieGalleryItem key={movie.id} {...movie} />\n                ))}\n            </ul>\n}\n\n\n\nMovieGallery.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            movie: PropTypes.string,\n        })\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchFormButton\":\"SearchForm_searchFormButton__Zv-9i\",\"searchFormLabel\":\"SearchForm_searchFormLabel__ks0d9\",\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\"};","import { useState } from \"react\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport Notiflix from 'notiflix';\nimport PropTypes from \"prop-types\";\nimport css from './SearchForm.module.css';\n\nexport const SearchForm = ({onSubmit}) => {\n    \n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleChangeMovie = event => {\n        setSearchQuery(event.currentTarget.value.toLowerCase());\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (searchQuery.trim() === '') {\n           return Notiflix.Notify.warning('Enter a query');\n        }\n\n        onSubmit(searchQuery);\n        setSearchQuery('');\n    }\n\n        return (\n                <form className={css.searchForm} onSubmit={handleSubmit}>\n                    <button type=\"submit\" className={css.searchFormButton}>\n                        <span className={css.searchFormLabel}>Search</span>\n                        <AiOutlineSearch />\n                    </button>\n\n                    <input\n                        onChange={handleChangeMovie}\n                        className={css.searchFormInput}\n                        type=\"text\"\n                        value={searchQuery}\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                    />\n                </form>\n        )\n}\n\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__hb-lD\"};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Notiflix from 'notiflix';\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { getSearchMovies } from \"services/moviesApi\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { MovieGallery } from \"components/MovieGallery/MovieGallery\";\nimport { Button } from \"components/Button/Button\";\nimport css from \"./Movies.module.css\";\n\nconst Movies = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isVissible, setIsVissible] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(false);\n  \n  const query = searchParams.get(\"query\") ?? '';\n\n  useEffect(() => {\n      if (!query) return;\n    \n      const getMoviesBySearch = async () => {\n      setIsLoading(true);\n\n      try {\n        const { results, total_results } = await getSearchMovies(query, page);\n        \n        if (total_results === 0) {\n            setIsVissible(false)\n            return Notiflix.Notify.failure(\"Sorry, there are no movies matching your search query. Please try again.\");\n        };\n\n        if (page > Math.ceil(total_results / 20)) {\n            setIsVissible(false)\n            return Notiflix.Notify.warning(\"We're sorry, but you've reached the end of search results.\");\n        };\n        \n        setSearchMovies(prevState => [...prevState, ...results]);\n        setIsVissible(page < Math.ceil(total_results / 20))\n          \n      } catch (error) {\n      setError(error.message);\n      \n      }\n      finally {\n          setIsLoading(false)\n      }\n      }\n  \n      getMoviesBySearch();\n  }, [query, page])\n  \n\n  const handleFormSubmit = value => {\n      const nextParams = value !== \"\" ? { query: value } : {};\n      setSearchParams(nextParams);  \n      setSearchMovies([]);\n      setPage(1);\n      setError(false);\n  }\n\n  const loadMoreButton = () => {\n        setPage(prevState => (prevState + 1))\n    };\n    \n  return (\n         <div className={css.container}>\n            <SearchForm onSubmit={handleFormSubmit} />\n            \n            {isLoading && <Loader />}\n            \n            {searchMovies.length > 0 && <MovieGallery movies={searchMovies} />}\n            \n            {isVissible && (<Button disabled={isLoading} onLoadMoreButton={loadMoreButton}>\n                {isLoading ? 'Loading...' : 'Load more'}\n                </Button>)}\n      \n          </div>\n    )\n}\n\nexport default Movies;","import axios from \"axios\";\n\nexport const getTrendingMovies = async (page=1) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=1a0f2de132857590e908bb553dea49ea&page=${page}`);\n    return data;\n}\n\nexport const getMovieDetails = async (movie_id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=1a0f2de132857590e908bb553dea49ea`);\n    return data;\n}\n\nexport const getCastDetails = async (movie_id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=1a0f2de132857590e908bb553dea49ea`);\n    return data;\n}\n\nexport const getReviewsDetails = async (movie_id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=1a0f2de132857590e908bb553dea49ea`);\n    return data;\n}\n\n export const getSearchMovies = async (query, page=1) => {\n     const { data } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=1a0f2de132857590e908bb553dea49ea&query=${query}&page=${page}`);\n    return data;\n  }"],"names":["Button","onLoadMoreButton","children","type","onClick","className","css","MovieGalleryItem","poster_path","original_title","id","URI","undefined","foto","location","useLocation","currentPage","pathname","to","state","from","src","alt","MovieGallery","movies","length","map","movie","SearchForm","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","Notiflix","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","searchMovies","setSearchMovies","page","setPage","isVissible","setIsVissible","isLoading","setIsLoading","setError","query","get","useEffect","getMoviesBySearch","getSearchMovies","results","total_results","Math","ceil","prevState","message","Loader","disabled","getTrendingMovies","axios","data","getMovieDetails","movie_id","getCastDetails","getReviewsDetails"],"sourceRoot":""}