{"version":3,"file":"static/js/656.477c4a31.chunk.js","mappings":"gRACA,EAA2B,2BAA3B,EAAwE,kCAAxE,EAA8H,oCAA9H,EAA0K,wBAA1K,EAAyM,uB,SCG5LA,EAAW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAGpCC,EAAG,UAFS,+BAET,OADU,QACV,OAA2BD,GAMlC,OAJqB,OAAjBA,QAA0CE,IAAjBF,IACzBC,E,miEAII,gBAAIE,UAAWC,EAAf,WACI,gBAAKC,IAAKJ,EAAKK,IAAKP,EAAMI,UAAWC,KACrC,iBAAKD,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,SAA0BL,KAC1B,eAAGI,UAAWC,EAAd,wBAAoCN,UAIvD,ECrBD,EAA2B,2BCIdS,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvB,OACQ,eAAIL,UAAWC,EAAf,SACKI,EAAKC,OAAS,GAAKD,EAAKE,KAAI,SAAAC,GAAI,OAC7B,SAACd,GAAD,UAA4Bc,GAAbA,EAAKC,GADS,KAKhD,EC6BD,EApCa,WAEX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAqBH,EAAAA,EAAAA,WAAS,GAArBI,GAAT,eAuBE,OApBFC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,mCAAG,6FAChBH,GAAa,GADG,mBAIWI,EAAAA,EAAAA,IAAeT,GAJ1B,gBAIJL,EAJI,EAIJA,KACVQ,EAAQR,GALM,gDAQhBW,EAAS,KAAMI,SARC,yBAYZL,GAAa,GAZD,4EAAH,qDAgBbG,GACH,GAAE,CAACR,EAASM,KAGL,gCACKF,IAAa,SAACO,EAAA,EAAD,IACbhB,IAAQ,SAACD,EAAD,CAAUC,KAAMA,MAGtC,C,mMCvCYiB,EAAiB,mCAAG,2GAAOC,EAAP,+BAAY,EAAZ,SACRC,EAAAA,EAAAA,IAAA,wGAA2GD,IADnG,uBACtBE,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,yFACJH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,8CADI,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfN,EAAc,mCAAG,WAAOQ,GAAP,yFACHH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,sDADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKdG,EAAiB,mCAAG,WAAOD,GAAP,yFACNH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,sDADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKhBI,EAAe,mCAAG,WAAOC,GAAP,8FAAcP,EAAd,+BAAmB,EAAnB,SACJC,EAAAA,EAAAA,IAAA,mGAAsGM,EAAtG,iBAAoHP,IADhH,uBACnBE,EADmB,EACnBA,KADmB,kBAErBA,GAFqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.jsx","webpack://react-homework-template/./src/components/CastInfo/CastInfo.module.css?0a17","components/CastInfo/CastInfo.jsx","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"CastItem_castItem__fW-Sh\",\"castItem__image\":\"CastItem_castItem__image__Sti2j\",\"castItem__wrapper\":\"CastItem_castItem__wrapper__do9uD\",\"title\":\"CastItem_title__3hJXD\",\"text\":\"CastItem_text__jEM4w\"};","import PropTypes from 'prop-types';\nimport foto from '../../images/not-found.png';\nimport css from \"./CastItem.module.css\";\n\nexport const CastItem = ({ character, name, profile_path }) => {\n    const baseUrl = 'https://image.tmdb.org/t/p/';\n    const fileSize = 'w500';\n    let URI = `${baseUrl}${fileSize}${profile_path}`;\n\n    if (profile_path === null || profile_path === undefined) {\n        URI = foto;\n    }\n\n    return (\n            <li className={css.castItem}>\n                <img src={URI} alt={name} className={css.castItem__image}/>\n                <div className={css.castItem__wrapper}>\n                    <p className={css.title}>{name}</p>\n                    <p className={css.text}>Character: {character}</p>\n                </div>\n            </li>\n    )\n}\n\n\nCastItem.propTypes = {\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastInfo_castList__JzlEb\"};","import PropTypes from 'prop-types';\nimport { CastItem } from \"components/CastItem/CastItem\";\nimport css from \"./CastInfo.module.css\";\n\n\nexport const CastInfo = ({ cast }) => {\n\n    return (\n            <ul className={css.castList}>\n                {cast.length > 0 && cast.map(item => (\n                    <CastItem key={item.id} {...item} />\n                ))}\n            </ul>  \n    )\n}\n\nCastInfo.propTypes = {\n    cast: PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        item: PropTypes.string,\n    }))\n}","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCastDetails } from \"services/moviesApi\";\nimport { Loader } from 'components/Loader/Loader';\nimport { CastInfo } from \"components/CastInfo/CastInfo\";\n\n\nconst Cast = () => {\n\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(false);\n\n\n  useEffect(() => {\n      const getCast = async () => {\n      setIsLoading(true);\n\n      try {\n          const { cast } = await getCastDetails(movieId);\n        setCast(cast);\n          \n      } catch (error) {\n      setError(error.message);\n      \n      }\n      finally {\n          setIsLoading(false)\n      }\n      }\n  \n      getCast();\n  }, [movieId, setError])\n\n    return (\n          <>\n              {isLoading && <Loader />}\n              {cast && <CastInfo cast={cast} />}\n          </>\n    )\n}\n\nexport default Cast;","import axios from \"axios\";\n\nexport const getTrendingMovies = async (page=1) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=1a0f2de132857590e908bb553dea49ea&page=${page}`);\n    return data;\n}\n\nexport const getMovieDetails = async (movie_id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=1a0f2de132857590e908bb553dea49ea`);\n    return data;\n}\n\nexport const getCastDetails = async (movie_id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=1a0f2de132857590e908bb553dea49ea`);\n    return data;\n}\n\nexport const getReviewsDetails = async (movie_id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=1a0f2de132857590e908bb553dea49ea`);\n    return data;\n}\n\n export const getSearchMovies = async (query, page=1) => {\n     const { data } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=1a0f2de132857590e908bb553dea49ea&query=${query}&page=${page}`);\n    return data;\n  }"],"names":["CastItem","character","name","profile_path","URI","undefined","className","css","src","alt","CastInfo","cast","length","map","item","id","movieId","useParams","useState","setCast","isLoading","setIsLoading","setError","useEffect","getCast","getCastDetails","message","Loader","getTrendingMovies","page","axios","data","getMovieDetails","movie_id","getReviewsDetails","getSearchMovies","query"],"sourceRoot":""}